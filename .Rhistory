car1 <- read.csv("D:/CSJ/DAY3/DAY3/car1.csv")
View(car1)
>   View(car1)
car1 <- read.csv("D:/CSJ/DAY3/DAY3/car1.csv")
View(car1)
str(car1)
names(car1)
names(car1) <- c("이름","밤낮","사고수", "사망", "중상", "부상", "고통", "리포트")
ca1
car1
names(car) <- c("name", "DayNight", "count", "death",  "injury",   "Sinjury",  "wound",    "report" )
names(car1) <- c("name", "DayNight", "count", "death",  "injury",   "Sinjury",  "wound",    "report" )
car1
names(car1) <- c("name","DayNight","count","death","injury","Sinjury","wound","report")
car1
car1$name
car1$result <- ifelse(car1$DayNight == 1,"낮","밤")
car1
car1$result2 <- ifelse(car$name=="과속","속도문제","x")
car1$result2 <- ifelse(car1$name=="과속","속도문제","x")
car1$result3 <- ifelse(car1$count > 5000,"큰사고","작은사고")
car1
table(car1$DayNight)
table(car1$name)
table(car1$count)
table(car1$result3)
table(car1$result2)
table(car1$result1)
table(car1$result)
plot(car1$DayNight)
plot(car1$result)
plot(car1$result2)
plot(car1$count)
plot(car1$DayNight)
table(car1$result2)
qplot(car$DayNight)
library("ggplot")
library("ggplot2")
qplot(car$DayNight)
qplot(car1$DayNight)
qplot(car1$count)
qplot(car1$result2)
qplot(car1$result3)
qplot(car1$result)
qplot(car1$DayNight)
plot(car1$result)
plot(table(car1$DayNight))
plot(car1$result)
plot(table(car1$DayNight))
install.packages(ggplot2)
install.packages("ggplot2")
library("ggplot2")
qplot(car1$DayNight)
#없는 컬럼을 하나 변수로 만들어서 추가 => 파생변수
car1$result4 <- ifelse(car1$death>=1000,"대형사고",
ifelse(car1$death>=100,"중형사고","보통사고"))
table(result4)
table(car1$result4)
qplot(car1$result4)
car2 <- data.frame(car1$name,car1$count,car1$result4)
car2
View(car2)
car2 <- data.frame(name = car1$name,count = car1$count,result = car1$result4)
View(car2)
# 부분 추출 함수 (subset(추출대상, 조건))
daycount <- subset(car1$count, car1$DayNight==1)
daycount
typeof(daycount)
class(daycount)
str(daycount)
sum(daycount)
nightcount <- subset(car1$count,car1$DayNight==0)
nightcount
sum(nightcount)
daynightcount <- data.frame(daycount,nightcount)
qplot(daynightcount)
daynightcount <- data.frame(daycount,nightcount)
daynightcount
table(daynightcount)
daynightcount <- data.frame(daycount,nightcount)
daynightcount
table(daynightcount)
qplot(daynightcount)
table(car1$daynightcount)
daynightcount
nightsum <- sum(nightcount)
daysum <- sum(daycount)
daynightcount <- data.frame(daysum,nightsum)
daynightcount
table(car1$daynightcount)
table(daynightcount)
qplot(daynightcount)
daynightcount <- data.frame(daysum,nightsum)
daynightcount
table(daynightcount)
qplot(daynightcount)
plot(daynightcount)
daynightcount <- data.frame(day = daycount,night = nightcount)
daynightcount
table(daynightcount)
qplot(daynightcount)
table(daynightcount)
table(car1$count)
table(daynightcount)
daynightcount <- data.frame(day = daycount,night = nightcount)
daynightcount
daynightsum <- datat.frame(daysum,nightsum)
daynightsum <- data.frame(daysum,nightsum)
daynightsum
table(daynightsum)
hist(daynightsum)
hist(daynightsum$daysum)
hist(daynightsum$nightsum)
sum(daycount)
mean(daycount)
sum(daynight)
mean(daynight)
sum(nightcount)
mean(nightcount)
max(daycount)
min(daycount)
# 조건 ifelse(조건1 & 조건2)
# 밤에 과속인 경우
# 밤에 신호위반인 경우
overspeed <- subset(car1$count,daynight==0 & name=="과속")
# 조건 ifelse(조건1 & 조건2)
# 밤에 과속인 경우
# 밤에 신호위반인 경우
overspeed <- subset(car1$count,car1$DayNight==0 & car1$name=="과속")
overspeed
ignoresignal <- subset(car1$count,car1$DayNight==0 & car1$name=="신호위반")
ignoresignal
temp <- data.frame(overspeed,ignoresignal)
temp
qplot(temp)
overspeed2 <- ifelse(car1$DayNight==1 & car1$name=="과속",car1$count)
overspeed2 <- ifelse(car1$DayNight==1 & car1$name=="과속")
overspeed2 <- ifelse(car1$DayNight==1 & car1$name=="과속", car1$count,0)
overspeed2
overspeed2 <- sum(ifelse(car1$DayNight==1 & car1$name=="과속", car1$count,0))
overspeed2
overspeed2 <- sum(ifelse(car1$DayNight==0 & car1$name=="과속", car1$count,0))
overspeed2
ignoresignal2 <- sum(ifelse(car1$DayNight==0&car1$name=="신호위반",car1$count,0))
ignoresignal
max(overspeed,ignoresignal)
exam <- read.csv(D:/CSJ/DAY3/DAY3/간단_분석용_데이터)
exam <- read.csv(D:/CSJ/DAY3/DAY3/간단_분석용_데이터,what="")
exam <- read.csv(D:CSJ/DAY3/DAY3/간단_분석용_데이터,what="")
exam <- read.csv(D:CSJ/DAY3/DAY3/간단_분석용_데이터)
library(dplyr)
exam <- read.csv("D:/CSJ/DAY3/DAY3/간단_분석용_데이터/csv_exam.csv")
View(exam)
exam <- read.csv("D:/CSJ/DAY3/DAY3/간단_분석용_데이터/csv_exam.csv")
exam <- read.csv("D:/CSJ/DAY3/DAY3/간단_분석용_데이터/csv_exam.csv")
View(exam)
exam %>% filter(class == 1)
View(exam)
exam %>% filter(class == 1)
exam %>% filter(class == 1) %>% head(3)
class1 <- exam %>% filter(class == 1)
class2 <- exam %>% filter(class == 2)
class3 <- exam %>% filter(class == 3)
class4 <- exam %>% filter(class == 4)
class1
classnot1 <- exam %>% filter(class != 1)
classnot1
exam %>% filter(english <= 80)
exam %>% filter(english <= 80) %>% class==3
exam %>% filter(english <= 80) & class==3)
exam %>% filter(english <= 80) & class==3)
exam %>% filter(english <= 80 & class==3)
exam %>% filter(english <= 80 | class==3)
exam %>% filter(math >= 75 | science >= 80)
exam %>% filter(class==1 | class==3 |class==5)
exam %>% filter(class==1 | class==3 | class==5)
exam %>% filter(class c(1,3,5))
exam %>% filter(class %in% c(1,3,5))
max(class1$math)
# ggplot2 : package + dataset
install.packages(ggplot2)
# ggplot2 : package + dataset
install.packages("ggplot2")
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)
mpg
mpg %>% head(20)
# ford차량의 고속도로 연비 평균
mpg %>% filter(manufacturer == "ford")
# ford차량의 고속도로 연비 평균
ford1 <- mpg %>% filter(manufacturer == "ford")
ford1$displ
mean(ford1$displ)
# ford차량의 고속도로 연비 평균
ford1 <- mpg %>% filter(manufacturer == "ford")
ford``
ford1
library(dplyr)
# ford차량의 고속도로 연비 평균
ford1 <- mpg %>% filter(manufacturer == "ford")
ford1
mean(ford1$displ)
# ford차량의 고속도로 연비 평균
ford1 <- (mpg %>% filter(manufacturer == "ford"))$displ
ford1
# ford차량의 고속도로 연비 평균
ford1 <- mean((mpg %>% filter(manufacturer == "ford"))$displ)
ford1
# ford차량의 고속도로 연비 평균
ford1 <- mean((mpg %>% filter(manufacturer == "ford"))$hwy)
ford1
mean(ford1$hwy)
# 1번: class가 compact의 고속도로 평균연비
temp1 <- mean((mpg %>% filter(class == compact))$hwy)
# 1번: class가 compact의 고속도로 평균연비
temp1 <- mean((mpg %>% filter(class == "compact"))$hwy)
# 2번: class가 SUV의 고속도로 평균연비
temp2 <- mean((mpg %>% filter(class == "suv"))$hwy)
max(temp1,temp2)
temp1
temp2
exam
exam %>% select(math)
exam %>% select(math,english)
exam %>% select(-math)
exam
exam %>% filter(class == 1)
exam %>% filter(class == 1) %>% select(english)
exam %>%
filter(class == 1) %>%
select(english)
# R은 들여쓰기가 의미가 없음. 가독성때문에 하는 것.
# 파이썬은 들여쓰기가 문법의 일부
exam %>%
filter(class == 1) %>%
select(english) %>%
head()
# R은 들여쓰기가 의미가 없음. 가독성때문에 하는 것.
# 파이썬은 들여쓰기가 문법의 일부
exam %>%
filter(class == 1) %>%
select(english) %>%
head(2)
# 정렬
exam %>% arrage(math)
# 정렬
exam %>% arrage(class,math)
# 정렬
exam %>% arrange(class,math)
exam %>% arrange(desc(class),math)
exam %>% arrange(desc(class,math)
exam %>% arrange(desc(class,math))
exam %>% arrange(desc(class),desc(math)
exam %>% arrange(desc(class),desc(math))
exam %>% arrange(desc(class),math)
exam %>% arrange(desc(class),desc(math)
exam %>% arrange(desc(class),desc(math))
exam %>% arrange(desc(class,math)
exam %>% arrange(desc(class,math))
exam %>% arrange(desc(class),math)
exam %>% mutate(total = math+english+science)
exam %>% group_by(class=1)
exam %>% group_by(class)
summarise(mean_math=mean(math)
exam %>% group_by(class) %>%
summarise(mean_math=mean(math))
exam %>% group_by(class) %>%
summarise(mean_math=mean(exam$math))
exam %>%
group_by(class) %>%
summarise(mean_math=mean(exam$math))
exam %>%
group_by(class) %>%
summarise(mean_math=mean(exam$math))
exam %>% group_by(class)
exam %>%
group_by(class) %>%
summarise(mean(math))
exam %>%
group_by(class) %>%
summarise(mean(math),
sumMath = sum(math))
exam %>%
group_by(class) %>%
summarise(mean(math),
sumMath = sum(math),
median = median(math),
n = n(math))
exam %>%
group_by(class) %>%
summarise(mean(math),
sumMath = sum(math),
median = median(math),
n = n(math)
)
exam %>%
group_by(class) %>%
summarise(mean(math),
sumMath = sum(math),
median = median(math),
n = n()
)
mpg
mpg %>% group_by(manufacturer) %>%
filter(class=="suv") %>%
mutate(tot = (cty+hwy)/2) %>%
summarise(meantot = mean(tot)) %>%
arrange(desc(meantot)) %>%
head(5)
mpg %>% group_by(manufacturer) %>%
filter(class=="suv") %>%
mutate(tot = (cty+hwy)/2) %>%
summarise(meantot = mean(tot)) %>%
arrange(desc(meantot)) %>%
head(5)
install.packages("rvest")
library(rvest)
library(rvest) #램에다가 올린다
url <- "http://www.daum.net"
htmlText <- read_html(url)
htmlText
news <- html_nodes(htmlText,"#news")
news
product <- html_nodes(htmlText,".screen_out")
product
product2 <- html_nodes(htmlText,"h2")
product2
product1Text <- html_text(product)
product1Text
productText <- html_text(product)
productText
dataframe <- data.frame(productText)
dataframe
product3 <- html_text(htmlText,"txt_pctop link_map"")
product3 <- html_text(htmlText,"txt_pctop link_map")
product3 <- html_text(htmlText,"txt_pctop link_map")
product3
product3 <- html_text(htmlText,"link_map")
product3
product3 <- html_text("link_map")
product3 <- html_text(htmlText,"link_map")
product4 <- html_nodes(htmlText,"link_map")
product3 <- html_text(product4)
product3
product4 <- html_nodes(htmlText,"link_map")
product4
product4 <- html_nodes(htmlText,"link_map")
product4 <- html_nodes(htmlText,"link_map")
product4
product3 <- html_text(product4)
product3
productText <- html_text(product)
productText
product4 <- html_nodes(htmlText,"link_map")
product4
product <- html_nodes(htmlText,".screen_out")
product
product2 <- html_nodes(htmlText,"h2")
product2
productText <- html_text(product)
productText
product3 <- html_nodes(htmlText,"link_map")
product3
product <- html_nodes(htmlText,".screen_out")
product
product3 <- html_nodes(htmlText,"txt_pctop link_map")
product3
product3 <- html_nodes(htmlText,"txt_pctop link_cafe")
product3
product3 <- html_nodes(htmlText,"txt_pctop link_cafe")
product3
product4 <- html_text(product3)
product4
product3 <- html_nodes(htmlText,"txt_pctop link_together")
product3
product <- html_nodes(htmlText,".screen_out")
product
product3 <- html_nodes(htmlText,"link_together")
product3
url <- "http://www.daum.net"
htmlText <- read_html(url)
htmlText
product3 <- html_nodes(htmlText,"link_together")
product3
product3 <- html_nodes(htmlText,"coll_svc ")
product3
product3 <- html_nodes(htmlText,"coll_svc")
product3
product3 <- html_nodes(htmlText,"txt_pctop link_kakaotv")
product3
product <- html_nodes(htmlText,".screen_out")
product
product3 <- html_nodes(htmlText,"d_index")
product3
product3 <- html_nodes(htmlText,"txt_pctop link_map")
product3
product3 <- html_nodes(htmlText,"txt_pctop link_game")
product3
product3 <- html_nodes(htmlText,"ir_wa")
product3
product3 <- html_nodes(htmlText,"screen_out")
product3
product3 <- html_nodes(htmlText,".screen_out")
product3
product3 <- html_nodes(htmlText,".txt_pctop link_kakaotv")
product3
product3 <- html_nodes(htmlText,".txt_pctop link_kakaotv")
product3
product4 <- html_text(product3)
product4
product3 <- html_nodes(htmlText,"txt_pctop link_kakaotv")
product3
product2 <- html_nodes(htmlText,"h2")
product2
product3 <- html_nodes(htmlText,"txt_pctop link_kakaotv")
product3
product2 <- html_nodes(htmlText,"h2")
product2
product3 <- html_nodes(htmlText,".txt_pctop link_kakaotv")
product3
product3 <- html_nodes(htmlText,".txt_pctop .link_kakaotv")
product3
product3 <- html_nodes(htmlText,".txt_pctop.link_kakaotv")
product3
